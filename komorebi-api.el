;;; komorebi-api.el --- Description -*- lexical-binding: t; -*-
;;
;; Copyright (C) 2024 Erich Raschle
;;
;; Author: Erich Raschle <erichraschle@gmail.com>
;; Maintainer: Erich Raschle <erichraschle@gmail.com>
;; Created: Oktober 07, 2024
;; Modified: December 17, 2024
;; Version: 0.0.1
;; Keywords: docs emulations extensions help languages lisp local processes
;; Homepage: https://github.com/elyo/komorebi.el
;; Package-Requires: ((emacs "28.1"))
;;
;; This file is not part of GNU Emacs.
;;
;;; Commentary:
;;
;;  Description
;;
;;; Code:

;; Code generated by pyKomorebi.py

(require 'cl-lib)

(defcustom komorebi-api-executable ""
  "The path to the komorebi executable."
  :type 'string
  :group 'komorebi-api)

(defun komorebi-api--args-get (args)
  "Return string of ARGS."
  (string-join
   (seq-filter (lambda (arg) (not (or (null arg) (string-empty-p arg)))) args)
   " "))

(defun komorebi-api--execute (command &rest args)
  "Execute komorebi COMMAND with ARGS in shell."
  (let ((shell-cmd (format "%s %s %s"
                           (shell-quote-argument komorebi-api-executable)
                           command
                           (komorebi-api--args-get args))))
    (let ((result (shell-command-to-string shell-cmd)))
      (message "Executing: %s\n%s" shell-cmd result)
      result)))

(cl-defun komorebi-api-adjust-container-padding (&key sizing adjustment)
  "Adjust container padding on the focused workspace.
Usage:
komorebic.exe adjust-container-padding <SIZING> <ADJUSTMENT>

Arguments:
SIZING: Possible values: increase, decrease
ADJUSTMENT: Pixels to adjust by as an integer"
  (komorebi-api--execute "adjust-container-padding" sizing adjustment))


(cl-defun komorebi-api-adjust-workspace-padding (&key sizing adjustment)
  "Adjust workspace padding on the focused workspace.
Usage:
komorebic.exe adjust-workspace-padding <SIZING> <ADJUSTMENT>

Arguments:
SIZING: Possible values: increase, decrease
ADJUSTMENT: Pixels to adjust by as an integer"
  (komorebi-api--execute "adjust-workspace-padding" sizing adjustment))


(cl-defun komorebi-api-ahk-app-specific-configuration (&key path)
  "Generate common app-specific configurations and fixes to use in komorebi.ahk.
Usage:
komorebic.exe ahk-app-specific-configuration <PATH> [OVERRIDE_PATH]

Arguments:
PATH: YAML file from which the application-specific configurations should be
loaded
[OVERRIDE_PATH]
Optional YAML file of overrides to apply over the first
file"
  (komorebi-api--execute "ahk-app-specific-configuration" path))


(cl-defun komorebi-api-animation-duration (&key duration)
  "Set the duration for movement animations in ms.
Usage:
komorebic.exe animation-duration <DURATION>

Arguments:
DURATION: Desired animation durations in ms"
  (komorebi-api--execute "animation-duration" duration))


(cl-defun komorebi-api-animation-fps (&key fps)
  "Set the frames per second for movement animations.
Usage:
komorebic.exe animation-fps <FPS>

Arguments:
FPS: Desired animation frames per second"
  (komorebi-api--execute "animation-fps" fps))


(cl-defun komorebi-api-animation-style (&key style)
  "Set the ease function for movement animations.
Usage:
komorebic.exe animation-style [OPTIONS]

Options:
style(linear): Desired ease function for animation
Possible values:, linear, ease-in-sine, ease-out-sine, ease-in-out-sine
ease-in-quad, ease-out-quad, ease-in-out-quad, ease-in-cubic, ease-in-out-cubic
ease-in-quart, ease-out-quart, ease-in-out-quart, ease-in-quint, ease-out-quint
ease-in-out-quint, ease-in-expo, ease-out-expo, ease-in-out-expo, ease-in-circ
ease-out-circ, ease-in-out-circ, ease-in-back, ease-out-back, ease-in-out-back
ease-in-elastic, ease-out-elastic, ease-in-out-elastic, ease-in-bounce
ease-out-bounce, ease-in-out-bounce"
  (komorebi-api--execute "animation-style" style))


(cl-defun komorebi-api-animation (&key boolean-state)
  "Enable or disable movement animations.
Usage:
komorebic.exe animation <BOOLEAN-STATE>

Arguments:
BOOLEAN-STATE: Possible values: enable, disable"
  (komorebi-api--execute "animation" boolean-state))


;;;###autoload
(defun komorebi-api-application-specific-configuration-schema ()
  "Generate a JSON Schema for applications.json.
Usage:
komorebic.exe application-specific-configuration-schema"
  (interactive)
  (komorebi-api--execute "application-specific-configuration-schema" ))


;;;###autoload
(defun komorebi-api-bar-configuration ()
  "Show the path to komorebi.bar.json.
Usage:
komorebic.exe bar-configuration"
  (interactive)
  (komorebi-api--execute "bar-configuration" ))


(cl-defun komorebi-api-border-colour (&key r g b window)
  "Set the colour for a window border kind.
Usage:
komorebic.exe border-colour [OPTIONS] <R> <G> <B>

Arguments:
R: Red
G: Green
B: Blue

Options:
window(single): Possible values:, single, stack, monocle, unfocused, floating"
  (komorebi-api--execute "border-colour" r g b window))


(cl-defun komorebi-api-border-implementation (&key style)
  "Set the border implementation.
Usage:
komorebic.exe border-implementation <STYLE>

Arguments:
STYLE: Desired border implementation
Possible values:
- komorebi: Use the adjustable komorebi border implementation
- windows: Use the thin Windows accent border implementation"
  (komorebi-api--execute "border-implementation" style))


(cl-defun komorebi-api-border-offset (&key offset)
  "Set the border offset.
Usage:
komorebic.exe border-offset <OFFSET>

Arguments:
OFFSET: Desired offset of the window border"
  (komorebi-api--execute "border-offset" offset))


(cl-defun komorebi-api-border-style (&key style)
  "Set the border style.
Usage:
komorebic.exe border-style <STYLE>

Arguments:
STYLE: Desired border style
Possible values:
- system: Use the system border style
- rounded: Use the Windows 11-style rounded borders
- square: Use the Windows 10-style square borders"
  (komorebi-api--execute "border-style" style))


(cl-defun komorebi-api-border-width (&key width)
  "Set the border width.
Usage:
komorebic.exe border-width <WIDTH>

Arguments:
WIDTH: Desired width of the window border"
  (komorebi-api--execute "border-width" width))


(cl-defun komorebi-api-border (&key boolean-state)
  "Enable or disable borders.
Usage:
komorebic.exe border <BOOLEAN-STATE>

Arguments:
BOOLEAN-STATE: Possible values: enable, disable"
  (komorebi-api--execute "border" boolean-state))


(cl-defun komorebi-api-change-layout (&key default-layout)
  "Set the layout on the focused workspace.
Usage:
komorebic.exe change-layout <DEFAULT-LAYOUT>

Arguments:
DEFAULT-LAYOUT: Possible values: bsp, columns, rows, vertical-stack
  horizontal-stack, ultrawide-vertical-stack, grid, right-main-vertical-stack"
  (komorebi-api--execute "change-layout" default-layout))


;;;###autoload
(defun komorebi-api-check ()
  "Check komorebi configuration and related files for common errors.
Usage:
komorebic.exe check"
  (interactive)
  (komorebi-api--execute "check" ))


;;;###autoload
(defun komorebi-api-clear-all-workspace-rules ()
  "Remove all application association rules for all workspaces.
Usage:
komorebic.exe clear-all-workspace-rules"
  (interactive)
  (komorebi-api--execute "clear-all-workspace-rules" ))


(cl-defun komorebi-api-clear-named-workspace-layout-rules (&key workspace)
  "Clear all dynamic layout rules for the specified workspace.
Usage:
komorebic.exe clear-named-workspace-layout-rules <WORKSPACE>

Arguments:
WORKSPACE: Target workspace name"
  (komorebi-api--execute "clear-named-workspace-layout-rules" workspace))


(cl-defun komorebi-api-clear-named-workspace-rules (&key workspace)
  "Remove all application association rules for a named workspace.
Usage:
komorebic.exe clear-named-workspace-rules <WORKSPACE>

Arguments:
WORKSPACE: Name of a workspace"
  (komorebi-api--execute "clear-named-workspace-rules" workspace))


(cl-defun komorebi-api-clear-workspace-layout-rules (&key monitor workspace)
  "Clear all dynamic layout rules for the specified workspace.
Usage:
komorebic.exe clear-workspace-layout-rules <MONITOR> <WORKSPACE>

Arguments:
MONITOR: Monitor index (zero-indexed)
WORKSPACE: Workspace index on the specified monitor (zero-indexed)"
  (komorebi-api--execute "clear-workspace-layout-rules" monitor workspace))


(cl-defun komorebi-api-clear-workspace-rules (&key monitor workspace)
  "Remove all application association rules for a workspace by monitor and
workspace index
Usage:
komorebic.exe clear-workspace-rules <MONITOR> <WORKSPACE>

Arguments:
MONITOR: Monitor index (zero-indexed)
WORKSPACE: Workspace index on the specified monitor (zero-indexed)"
  (komorebi-api--execute "clear-workspace-rules" monitor workspace))


;;;###autoload
(defun komorebi-api-close ()
  "Close the focused window.
Usage:
komorebic.exe close"
  (interactive)
  (komorebi-api--execute "close" ))


;;;###autoload
(defun komorebi-api-complete-configuration ()
  "For legacy komorebi.ahk or komorebi.ps1 configurations, signal that the final
configuration option has been sent
Usage:
komorebic.exe complete-configuration"
  (interactive)
  (komorebi-api--execute "complete-configuration" ))


;;;###autoload
(defun komorebi-api-configuration ()
  "Show the path to komorebi.json.
Usage:
komorebic.exe configuration"
  (interactive)
  (komorebi-api--execute "configuration" ))


(cl-defun komorebi-api-container-padding (&key monitor workspace size)
  "Set the container padding for the specified workspace.
Arguments:
MONITOR  : Monitor index (zero-indexed)
WORKSPACE: Workspace index on the specified monitor (zero-indexed)
SIZE     : Pixels to pad with as an integer"
  (komorebi-api--execute "container-padding" monitor workspace size))


(cl-defun komorebi-api-convert-app-specific-configuration (&key path)
  "Convert a v1 ASC YAML file to a v2 ASC JSON file.
Arguments:
PATH: YAML file from which the application-specific configurations should be
loaded"
  (komorebi-api--execute "convert-app-specific-configuration" path))


(cl-defun komorebi-api-cross-monitor-move-behaviour (&key move-behaviour)
  "Set the behaviour when moving windows across monitor boundaries.
Arguments:
MOVE-BEHAVIOUR: Possible values:
- swap: Swap the window container with the window container at the
        edge of the adjacent monitor
- insert: Insert the window container into the focused workspace
          on the adjacent monitor
- no-op: Do nothing if trying to move a window container in
         the direction of an adjacent monitor"
  (komorebi-api--execute "cross-monitor-move-behaviour" move-behaviour))


(cl-defun komorebi-api-cycle-focus (&key cycle-direction)
  "Change focus to the window in the specified cycle direction.
Arguments:
CYCLE-DIRECTION: Possible values: previous, next"
  (komorebi-api--execute "cycle-focus" cycle-direction))


(cl-defun komorebi-api-cycle-layout (&key cycle-direction)
  "Cycle between available layouts.
Arguments:
CYCLE-DIRECTION: Possible values: previous, next"
  (komorebi-api--execute "cycle-layout" cycle-direction))


(cl-defun komorebi-api-cycle-monitor (&key cycle-direction)
  "Focus the monitor in the given cycle direction.
Arguments:
CYCLE-DIRECTION: Possible values: previous, next"
  (komorebi-api--execute "cycle-monitor" cycle-direction))


(cl-defun komorebi-api-cycle-move-to-monitor (&key cycle-direction)
  "Move the focused window to the monitor in the given cycle direction.
Arguments:
CYCLE-DIRECTION: Possible values: previous, next"
  (komorebi-api--execute "cycle-move-to-monitor" cycle-direction))


(cl-defun komorebi-api-cycle-move-to-workspace (&key cycle-direction)
  "Move the focused window to the workspace in the given cycle direction.
Arguments:
CYCLE-DIRECTION: Possible values: previous, next"
  (komorebi-api--execute "cycle-move-to-workspace" cycle-direction))


(cl-defun komorebi-api-cycle-move-workspace-to-monitor (&key cycle-direction)
  "Move the focused workspace monitor in the given cycle direction.
Arguments:
CYCLE-DIRECTION: Possible values: previous, next"
  (komorebi-api--execute "cycle-move-workspace-to-monitor" cycle-direction))


(cl-defun komorebi-api-cycle-move (&key cycle-direction)
  "Move the focused window in the specified cycle direction.
Arguments:
CYCLE-DIRECTION: Possible values: previous, next"
  (komorebi-api--execute "cycle-move" cycle-direction))


(cl-defun komorebi-api-cycle-send-to-monitor (&key cycle-direction)
  "Send the focused window to the monitor in the given cycle direction.
Arguments:
CYCLE-DIRECTION: Possible values: previous, next"
  (komorebi-api--execute "cycle-send-to-monitor" cycle-direction))


(cl-defun komorebi-api-cycle-send-to-workspace (&key cycle-direction)
  "Send the focused window to the workspace in the given cycle direction.
Arguments:
CYCLE-DIRECTION: Possible values: previous, next"
  (komorebi-api--execute "cycle-send-to-workspace" cycle-direction))


(cl-defun komorebi-api-cycle-stack (&key cycle-direction)
  "Cycle the focused stack in the specified cycle direction.
Arguments:
CYCLE-DIRECTION: Possible values: previous, next"
  (komorebi-api--execute "cycle-stack" cycle-direction))


(cl-defun komorebi-api-cycle-workspace (&key cycle-direction)
  "Focus the workspace in the given cycle direction.
Arguments:
CYCLE-DIRECTION: Possible values: previous, next"
  (komorebi-api--execute "cycle-workspace" cycle-direction))


;;;###autoload
(defun komorebi-api-disable-autostart ()
  "Deletes the komorebi.lnk shortcut in shell:startup to disable autostart."
  (interactive)
  (komorebi-api--execute "disable-autostart" ))


(cl-defun komorebi-api-display-index-preference (&key index-preference display)
  "Set the display index preference for a monitor identified using its display name.
Arguments:
INDEX-PREFERENCE: Preferred monitor index (zero-indexed)
DISPLAY: Display name as identified in komorebic state"
  (komorebi-api--execute "display-index-preference" index-preference display))


(cl-defun komorebi-api-enable-autostart (&key config whkd ahk bar)
  "Generates the komorebi.lnk shortcut in shell:startup to autostart komorebi.
Options:
CONFIG: Path to a static configuration JSON file
WHKD  : Enable autostart of whkd
AHK   : Enable autostart of ahk
BAR   : Enable autostart of komorebi-bar"
  (komorebi-api--execute "enable-autostart" config whkd ahk bar))


(cl-defun komorebi-api-ensure-named-workspaces (&key monitor)
  "Create these many named workspaces for the specified monitor.
Arguments:
MONITOR: Monitor index (zero-indexed)
[NAMES]... Names of desired workspaces"
  (komorebi-api--execute "ensure-named-workspaces" monitor))


(cl-defun komorebi-api-ensure-workspaces (&key monitor workspace-count)
  "Create at least this many workspaces for the specified monitor.
Arguments:
MONITOR        : Monitor index (zero-indexed)
WORKSPACE-COUNT: Number of desired workspaces"
  (komorebi-api--execute "ensure-workspaces" monitor workspace-count))


;;;###autoload
(defun komorebi-api-fetch-app-specific-configuration ()
  "Fetch the latest version of applications.json from
komorebi-application-specific-configuration."
  (interactive)
  (komorebi-api--execute "fetch-app-specific-configuration" ))


(cl-defun komorebi-api-flip-layout (&key axis)
  "Flip the layout on the focused workspace (BSP only).
Arguments:
AXIS: Possible values: horizontal, vertical, horizontal-and-vertical"
  (komorebi-api--execute "flip-layout" axis))


;;;###autoload
(defun komorebi-api-focus-last-workspace ()
  "Focus the last focused workspace on the focused monitor.
Usage:
komorebic.exe focus-last-workspace"
  (interactive)
  (komorebi-api--execute "focus-last-workspace" ))


(cl-defun komorebi-api-focus-monitor-workspace (&key target-monitor target-workspace)
  "Focus the specified workspace on the target monitor.
Usage:
komorebic.exe focus-monitor-workspace <TARGET-MONITOR> <TARGET-WORKSPACE>

Arguments:
TARGET-MONITOR: Target monitor index (zero-indexed)
TARGET-WORKSPACE: Workspace index on the target monitor (zero-indexed)"
  (komorebi-api--execute "focus-monitor-workspace" target-monitor target-workspace))


(cl-defun komorebi-api-focus-monitor (&key target)
  "Focus the specified monitor.
Usage:
komorebic.exe focus-monitor <TARGET>

Arguments:
TARGET: Target index (zero-indexed)"
  (komorebi-api--execute "focus-monitor" target))


(cl-defun komorebi-api-focus-named-workspace (&key workspace)
  "Focus the specified workspace.
Usage:
komorebic.exe focus-named-workspace <WORKSPACE>

Arguments:
WORKSPACE: Target workspace name"
  (komorebi-api--execute "focus-named-workspace" workspace))


(cl-defun komorebi-api-focus-stack-window (&key target)
  "Focus the specified window index in the focused stack.
Usage:
komorebic.exe focus-stack-window <TARGET>

Arguments:
TARGET: Target index (zero-indexed)"
  (komorebi-api--execute "focus-stack-window" target))


(cl-defun komorebi-api-focus-workspace (&key target)
  "Focus the specified workspace on the focused monitor.
Usage:
komorebic.exe focus-workspace <TARGET>

Arguments:
TARGET: Target index (zero-indexed)"
  (komorebi-api--execute "focus-workspace" target))


(cl-defun komorebi-api-focus-workspaces (&key target)
  "Focus the specified workspace on all monitors.
Usage:
komorebic.exe focus-workspaces <TARGET>

Arguments:
TARGET: Target index (zero-indexed)"
  (komorebi-api--execute "focus-workspaces" target))


(cl-defun komorebi-api-focus (&key operation-direction)
  "Change focus to the window in the specified direction.
Usage:
komorebic.exe focus <OPERATION-DIRECTION>

Arguments:
OPERATION-DIRECTION: Possible values: left, right, up, down"
  (komorebi-api--execute "focus" operation-direction))


(cl-defun komorebi-api-focused-workspace-container-padding (&key size)
  "Set container padding on the focused workspace.
Usage:
komorebic.exe focused-workspace-container-padding <SIZE>

Arguments:
SIZE: Pixels size to set as an integer"
  (komorebi-api--execute "focused-workspace-container-padding" size))


(cl-defun komorebi-api-focused-workspace-padding (&key size)
  "Set workspace padding on the focused workspace.
Usage:
komorebic.exe focused-workspace-padding <SIZE>

Arguments:
SIZE: Pixels size to set as an integer"
  (komorebi-api--execute "focused-workspace-padding" size))


;;;###autoload
(defun komorebi-api-force-focus ()
  "Forcibly focus the window at the cursor with a left mouse click.
Usage:
komorebic.exe force-focus"
  (interactive)
  (komorebi-api--execute "force-focus" ))


;;;###autoload
(defun komorebi-api-generate-static-config ()
  "Generates a static configuration JSON file based on the current window manager
state
Usage:
komorebic.exe generate-static-config"
  (interactive)
  (komorebi-api--execute "generate-static-config" ))


;;;###autoload
(defun komorebi-api-global-state ()
  "Show a JSON representation of the current global state.
Usage:
komorebic.exe global-state"
  (interactive)
  (komorebi-api--execute "global-state" ))


(cl-defun komorebi-api-global-work-area-offset (&key left top right bottom)
  "Set offsets to exclude parts of the work area from tiling.
Usage:
komorebic.exe global-work-area-offset <LEFT> <TOP> <RIGHT> <BOTTOM>

Arguments:
LEFT: Size of the left work area offset (set right to left * 2 to maintain right
padding)
TOP: Size of the top work area offset (set bottom to the same value to maintain
bottom padding)
RIGHT: Size of the right work area offset
BOTTOM: Size of the bottom work area offset"
  (komorebi-api--execute "global-work-area-offset" left top right bottom))


;;;###autoload
(defun komorebi-api-gui ()
  "Launch the komorebi-gui debugging tool.
Usage:
komorebic.exe gui"
  (interactive)
  (komorebi-api--execute "gui" ))


(cl-defun komorebi-api-identify-layered-application (&key identifier id)
  "Identify an application that has WS_EX_LAYERED, but should still be managed.
Usage:
komorebic.exe identify-layered-application <IDENTIFIER> <ID>

Arguments:
IDENTIFIER: Possible values: exe, class, title, path
ID: Identifier as a string"
  (komorebi-api--execute "identify-layered-application" identifier id))


(cl-defun komorebi-api-identify-object-name-change-application (&key identifier id)
  "Identify an application that sends EVENT_OBJECT_NAMECHANGE on launch.
Usage:
komorebic.exe identify-object-name-change-application <IDENTIFIER> <ID>

Arguments:
IDENTIFIER: Possible values: exe, class, title, path
ID: Identifier as a string"
  (komorebi-api--execute "identify-object-name-change-application" identifier id))


(cl-defun komorebi-api-identify-tray-application (&key identifier id)
  "Identify an application that closes to the system tray.
Usage:
komorebic.exe identify-tray-application <IDENTIFIER> <ID>

Arguments:
IDENTIFIER: Possible values: exe, class, title, path
ID: Identifier as a string"
  (komorebi-api--execute "identify-tray-application" identifier id))


(cl-defun komorebi-api-ignore-rule (&key identifier id)
  "Add a rule to ignore the specified application.
Usage:
komorebic.exe ignore-rule <IDENTIFIER> <ID>

Arguments:
IDENTIFIER: Possible values: exe, class, title, path
ID: Identifier as a string"
  (komorebi-api--execute "ignore-rule" identifier id))


(cl-defun komorebi-api-initial-named-workspace-rule (&key identifier id workspace)
  "Add a rule to associate an application with a named workspace on first show.
Usage:
komorebic.exe initial-named-workspace-rule <IDENTIFIER> <ID> <WORKSPACE>

Arguments:
IDENTIFIER: Possible values: exe, class, title, path
ID: Identifier as a string
WORKSPACE: Name of a workspace"
  (komorebi-api--execute "initial-named-workspace-rule" identifier id workspace))


(cl-defun komorebi-api-initial-workspace-rule (&key identifier id monitor workspace)
  "Add a rule to associate an application with a workspace on first show.
Usage:
komorebic.exe initial-workspace-rule <IDENTIFIER> <ID> <MONITOR> <WORKSPACE>

Arguments:
IDENTIFIER: Possible values: exe, class, title, path
ID: Identifier as a string
MONITOR: Monitor index (zero-indexed)
WORKSPACE: Workspace index on the specified monitor (zero-indexed)"
  (komorebi-api--execute "initial-workspace-rule" identifier id monitor workspace))


(cl-defun komorebi-api-invisible-borders (&key left top right bottom)
  "Set the invisible border dimensions around each window.
Usage:
komorebic.exe invisible-borders <LEFT> <TOP> <RIGHT> <BOTTOM>

Arguments:
LEFT: Size of the left invisible border
TOP: Size of the top invisible border (usually 0)
RIGHT: Size of the right invisible border (usually left * 2)
BOTTOM: Size of the bottom invisible border (usually the same as left)"
  (komorebi-api--execute "invisible-borders" left top right bottom))


(cl-defun komorebi-api-load-resize (&key path)
  "Load the resize layout dimensions from a file.
Usage:
komorebic.exe load-resize <PATH>

Arguments:
PATH: File from which the resize layout dimensions should be loaded"
  (komorebi-api--execute "load-resize" path))


;;;###autoload
(defun komorebi-api-log ()
  "Tail komorebi.exe's process logs (cancel with Ctrl-C).
Usage:
komorebic.exe log"
  (interactive)
  (komorebi-api--execute "log" ))


(cl-defun komorebi-api-manage-rule (&key identifier id)
  "Add a rule to always manage the specified application.
Usage:
komorebic.exe manage-rule <IDENTIFIER> <ID>

Arguments:
IDENTIFIER: Possible values: exe, class, title, path
ID: Identifier as a string"
  (komorebi-api--execute "manage-rule" identifier id))


;;;###autoload
(defun komorebi-api-manage ()
  "Force komorebi to manage the focused window.
Usage:
komorebic.exe manage"
  (interactive)
  (komorebi-api--execute "manage" ))


;;;###autoload
(defun komorebi-api-minimize ()
  "Minimize the focused window.
Usage:
komorebic.exe minimize"
  (interactive)
  (komorebi-api--execute "minimize" ))


(cl-defun komorebi-api-monitor-index-preference (&key index-preference left top right bottom)
  "Set the monitor index preference for a monitor identified using its size.
Usage:
komorebic.exe monitor-index-preference <INDEX-PREFERENCE> <LEFT> <TOP> <RIGHT> <BOTTOM>

Arguments:
INDEX-PREFERENCE: Preferred monitor index (zero-indexed)
LEFT: Left value of the monitor's size Rect
TOP: Top value of the monitor's size Rect
RIGHT: Right value of the monitor's size Rect
BOTTOM: Bottom value of the monitor's size Rect"
  (komorebi-api--execute "monitor-index-preference" index-preference left top right bottom))


;;;###autoload
(defun komorebi-api-monitor-information ()
  "Show information about connected monitors.
Usage:
komorebic.exe monitor-information"
  (interactive)
  (komorebi-api--execute "monitor-information" ))


(cl-defun komorebi-api-monitor-work-area-offset (&key monitor left top right bottom)
  "Set offsets for a monitor to exclude parts of the work area from tiling.
Usage:
komorebic.exe monitor-work-area-offset <MONITOR> <LEFT> <TOP> <RIGHT> <BOTTOM>

Arguments:
MONITOR: Monitor index (zero-indexed)
LEFT: Size of the left work area offset (set right to left * 2 to maintain right
padding)
TOP: Size of the top work area offset (set bottom to the same value to maintain
bottom padding)
RIGHT: Size of the right work area offset
BOTTOM: Size of the bottom work area offset"
  (komorebi-api--execute "monitor-work-area-offset" monitor left top right bottom))


(cl-defun komorebi-api-mouse-follows-focus (&key boolean-state)
  "Enable or disable mouse follows focus on all workspaces.
Usage:
komorebic.exe mouse-follows-focus <BOOLEAN-STATE>

Arguments:
BOOLEAN-STATE: Possible values: enable, disable"
  (komorebi-api--execute "mouse-follows-focus" boolean-state))


(cl-defun komorebi-api-move-to-monitor-workspace (&key target-monitor target-workspace)
  "Move the focused window to the specified monitor workspace.
Usage:
komorebic.exe move-to-monitor-workspace <TARGET-MONITOR> <TARGET-WORKSPACE>

Arguments:
TARGET-MONITOR: Target monitor index (zero-indexed)
TARGET-WORKSPACE: Workspace index on the target monitor (zero-indexed)"
  (komorebi-api--execute "move-to-monitor-workspace" target-monitor target-workspace))


(cl-defun komorebi-api-move-to-monitor (&key target)
  "Move the focused window to the specified monitor.
Usage:
komorebic.exe move-to-monitor <TARGET>

Arguments:
TARGET: Target index (zero-indexed)"
  (komorebi-api--execute "move-to-monitor" target))


(cl-defun komorebi-api-move-to-named-workspace (&key workspace)
  "Move the focused window to the specified workspace.
Usage:
komorebic.exe move-to-named-workspace <WORKSPACE>

Arguments:
WORKSPACE: Target workspace name"
  (komorebi-api--execute "move-to-named-workspace" workspace))


(cl-defun komorebi-api-move-to-workspace (&key target)
  "Move the focused window to the specified workspace.
Usage:
komorebic.exe move-to-workspace <TARGET>

Arguments:
TARGET: Target index (zero-indexed)"
  (komorebi-api--execute "move-to-workspace" target))


(cl-defun komorebi-api-move-workspace-to-monitor (&key target)
  "Move the focused workspace to the specified monitor.
Usage:
komorebic.exe move-workspace-to-monitor <TARGET>

Arguments:
TARGET: Target index (zero-indexed)"
  (komorebi-api--execute "move-workspace-to-monitor" target))


(cl-defun komorebi-api-move (&key operation-direction)
  "Move the focused window in the specified direction.
Usage:
komorebic.exe move <OPERATION-DIRECTION>

Arguments:
OPERATION-DIRECTION: Possible values: left, right, up, down"
  (komorebi-api--execute "move" operation-direction))


(cl-defun komorebi-api-named-workspace-container-padding (&key workspace size)
  "Set the container padding for the specified workspace.
Usage:
komorebic.exe named-workspace-container-padding <WORKSPACE> <SIZE>

Arguments:
WORKSPACE: Target workspace name
SIZE: Pixels to pad with as an integer"
  (komorebi-api--execute "named-workspace-container-padding" workspace size))


(cl-defun komorebi-api-named-workspace-layout-rule (&key workspace at-container-count layout)
  "Add a dynamic layout rule for the specified workspace.
Usage:
komorebic.exe named-workspace-layout-rule <WORKSPACE> <AT-CONTAINER-COUNT> <LAYOUT>

Arguments:
WORKSPACE: Target workspace name
AT-CONTAINER-COUNT: The number of window containers on-screen required to
trigger this layout rule
LAYOUT: Possible values: bsp, columns, rows, vertical-stack, horizontal-stack
  ultrawide-vertical-stack, grid, right-main-vertical-stack"
  (komorebi-api--execute "named-workspace-layout-rule" workspace at-container-count layout))


(cl-defun komorebi-api-named-workspace-layout (&key workspace value)
  "Set the layout for the specified workspace.
Usage:
komorebic.exe named-workspace-layout <WORKSPACE> <VALUE>

Arguments:
WORKSPACE: Target workspace name
VALUE: Possible values: bsp, columns, rows, vertical-stack, horizontal-stack
  ultrawide-vertical-stack, grid, right-main-vertical-stack"
  (komorebi-api--execute "named-workspace-layout" workspace value))


(cl-defun komorebi-api-named-workspace-padding (&key workspace size)
  "Set the workspace padding for the specified workspace.
Usage:
komorebic.exe named-workspace-padding <WORKSPACE> <SIZE>

Arguments:
WORKSPACE: Target workspace name
SIZE: Pixels to pad with as an integer"
  (komorebi-api--execute "named-workspace-padding" workspace size))


(cl-defun komorebi-api-named-workspace-rule (&key identifier id workspace)
  "Add a rule to associate an application with a named workspace.
Usage:
komorebic.exe named-workspace-rule <IDENTIFIER> <ID> <WORKSPACE>

Arguments:
IDENTIFIER: Possible values: exe, class, title, path
ID: Identifier as a string
WORKSPACE: Name of a workspace"
  (komorebi-api--execute "named-workspace-rule" identifier id workspace))


(cl-defun komorebi-api-named-workspace-tiling (&key workspace value)
  "Enable or disable window tiling for the specified workspace.
Usage:
komorebic.exe named-workspace-tiling <WORKSPACE> <VALUE>

Arguments:
WORKSPACE: Target workspace name
VALUE: Possible values: enable, disable"
  (komorebi-api--execute "named-workspace-tiling" workspace value))


;;;###autoload
(defun komorebi-api-new-workspace ()
  "Create and append a new workspace on the focused monitor.
Usage:
komorebic.exe new-workspace"
  (interactive)
  (komorebi-api--execute "new-workspace" ))


;;;###autoload
(defun komorebi-api-notification-schema ()
  "Generate a JSON Schema of subscription notifications.
Usage:
komorebic.exe notification-schema"
  (interactive)
  (komorebi-api--execute "notification-schema" ))


;;;###autoload
(defun komorebi-api-promote-focus ()
  "Promote the user focus to the top of the tree.
Usage:
komorebic.exe promote-focus"
  (interactive)
  (komorebi-api--execute "promote-focus" ))


(cl-defun komorebi-api-promote-window (&key operation-direction)
  "Promote the window in the specified direction.
Usage:
komorebic.exe promote-window <OPERATION-DIRECTION>

Arguments:
OPERATION-DIRECTION: Possible values: left, right, up, down"
  (komorebi-api--execute "promote-window" operation-direction))


;;;###autoload
(defun komorebi-api-promote ()
  "Promote the focused window to the top of the tree.
Usage:
komorebic.exe promote"
  (interactive)
  (komorebi-api--execute "promote" ))


(cl-defun komorebi-api-pwsh-app-specific-configuration (&key path)
  "Generate common app-specific configurations and fixes in a PowerShell script.
Usage:
komorebic.exe pwsh-app-specific-configuration <PATH> [OVERRIDE_PATH]

Arguments:
PATH: YAML file from which the application-specific configurations should be
loaded
[OVERRIDE_PATH]
Optional YAML file of overrides to apply over the first
file"
  (komorebi-api--execute "pwsh-app-specific-configuration" path))


(cl-defun komorebi-api-query (&key state-query)
  "Query the current window manager state.
Usage:
komorebic.exe query <STATE-QUERY>

Arguments:
STATE-QUERY: Possible values: focused-monitor-index, focused-workspace-index
  focused-container-index, focused-window-index"
  (komorebi-api--execute "query" state-query))


;;;###autoload
(defun komorebi-api-quick-load-resize ()
  "Load the last quicksaved resize layout dimensions.
Usage:
komorebic.exe quick-load-resize"
  (interactive)
  (komorebi-api--execute "quick-load-resize" ))


;;;###autoload
(defun komorebi-api-quick-save-resize ()
  "Quicksave the current resize layout dimensions.
Usage:
komorebic.exe quick-save-resize"
  (interactive)
  (komorebi-api--execute "quick-save-resize" ))


;;;###autoload
(defun komorebi-api-quickstart ()
  "Gather example configurations for a new-user quickstart.
Usage:
komorebic.exe quickstart"
  (interactive)
  (komorebi-api--execute "quickstart" ))


;;;###autoload
(defun komorebi-api-reload-configuration ()
  "Reload legacy komorebi.ahk or komorebi.ps1 configurations (if they exist).
Usage:
komorebic.exe reload-configuration"
  (interactive)
  (komorebi-api--execute "reload-configuration" ))


(cl-defun komorebi-api-remove-title-bar (&key identifier id)
  "Whitelist an application for title bar removal.
Usage:
komorebic.exe remove-title-bar <IDENTIFIER> <ID>

Arguments:
IDENTIFIER: Possible values: exe, class, title, path
ID: Identifier as a string"
  (komorebi-api--execute "remove-title-bar" identifier id))


(cl-defun komorebi-api-replace-configuration (&key path)
  "Replace the configuration of a running instance of komorebi from a static
configuration file
Usage:
komorebic.exe replace-configuration <PATH>

Arguments:
PATH: Static configuration JSON file from which the configuration should be
loaded"
  (komorebi-api--execute "replace-configuration" path))


(cl-defun komorebi-api-resize-axis (&key axis sizing)
  "Resize the focused window or primary column along the specified axis.
Usage:
komorebic.exe resize-axis <AXIS> <SIZING>

Arguments:
AXIS: Possible values: horizontal, vertical, horizontal-and-vertical
SIZING: Possible values: increase, decrease"
  (komorebi-api--execute "resize-axis" axis sizing))


(cl-defun komorebi-api-resize-delta (&key pixels)
  "Set the resize delta (used by resize-edge and resize-axis).
Usage:
komorebic.exe resize-delta <PIXELS>

Arguments:
PIXELS: The delta of pixels by which to increase or decrease window dimensions
when resizing"
  (komorebi-api--execute "resize-delta" pixels))


(cl-defun komorebi-api-resize-edge (&key edge sizing)
  "Resize the focused window in the specified direction.
Usage:
komorebic.exe resize-edge <EDGE> <SIZING>

Arguments:
EDGE: Possible values: left, right, up, down
SIZING: Possible values: increase, decrease"
  (komorebi-api--execute "resize-edge" edge sizing))


;;;###autoload
(defun komorebi-api-restore-windows ()
  "Restore all hidden windows (debugging command).
Usage:
komorebic.exe restore-windows"
  (interactive)
  (komorebi-api--execute "restore-windows" ))


;;;###autoload
(defun komorebi-api-retile ()
  "Force the retiling of all managed windows.
Usage:
komorebic.exe retile"
  (interactive)
  (komorebi-api--execute "retile" ))


(cl-defun komorebi-api-save-resize (&key path)
  "Save the current resize layout dimensions to a file.
Usage:
komorebic.exe save-resize <PATH>

Arguments:
PATH: File to which the resize layout dimensions should be saved"
  (komorebi-api--execute "save-resize" path))


(cl-defun komorebi-api-send-to-monitor-workspace (&key target-monitor target-workspace)
  "Send the focused window to the specified monitor workspace.
Usage:
komorebic.exe send-to-monitor-workspace <TARGET-MONITOR> <TARGET-WORKSPACE>

Arguments:
TARGET-MONITOR: Target monitor index (zero-indexed)
TARGET-WORKSPACE: Workspace index on the target monitor (zero-indexed)"
  (komorebi-api--execute "send-to-monitor-workspace" target-monitor target-workspace))


(cl-defun komorebi-api-send-to-monitor (&key target)
  "Send the focused window to the specified monitor.
Usage:
komorebic.exe send-to-monitor <TARGET>

Arguments:
TARGET: Target index (zero-indexed)"
  (komorebi-api--execute "send-to-monitor" target))


(cl-defun komorebi-api-send-to-named-workspace (&key workspace)
  "Send the focused window to the specified workspace.
Usage:
komorebic.exe send-to-named-workspace <WORKSPACE>

Arguments:
WORKSPACE: Target workspace name"
  (komorebi-api--execute "send-to-named-workspace" workspace))


(cl-defun komorebi-api-send-to-workspace (&key target)
  "Send the focused window to the specified workspace.
Usage:
komorebic.exe send-to-workspace <TARGET>

Arguments:
TARGET: Target index (zero-indexed)"
  (komorebi-api--execute "send-to-workspace" target))


;;;###autoload
(defun komorebi-api-socket-schema ()
  "Generate a JSON Schema of socket messages.
Usage:
komorebic.exe socket-schema"
  (interactive)
  (komorebi-api--execute "socket-schema" ))


;;;###autoload
(defun komorebi-api-stack-all ()
  "Stack all windows on the focused workspace.
Usage:
komorebic.exe stack-all"
  (interactive)
  (komorebi-api--execute "stack-all" ))


(cl-defun komorebi-api-stack (&key operation-direction)
  "Stack the focused window in the specified direction.
Usage:
komorebic.exe stack <OPERATION-DIRECTION>

Arguments:
OPERATION-DIRECTION: Possible values: left, right, up, down"
  (komorebi-api--execute "stack" operation-direction))


(cl-defun komorebi-api-start (&key config await tcp whkd ahk bar)
  "Start komorebi.exe as a background process.
Usage:
komorebic.exe start [OPTIONS]

Options:
CONFIG: Path to a static configuration JSON file
AWAIT: Wait for /='komorebic complete-configuration/=' to be sent before
processing events
TCP: Start a TCP server on the given port to allow the direct sending of
SocketMessages
WHKD: Start whkd in a background process
AHK: Start autohotkey configuration file
BAR: Start komorebi-bar in a background process"
  (komorebi-api--execute "start" config await tcp whkd ahk bar))


;;;###autoload
(defun komorebi-api-state ()
  "Show a JSON representation of the current window manager state.
Usage:
komorebic.exe state"
  (interactive)
  (komorebi-api--execute "state" ))


;;;###autoload
(defun komorebi-api-static-config-schema ()
  "Generate a JSON Schema of the static configuration file.
Usage:
komorebic.exe static-config-schema"
  (interactive)
  (komorebi-api--execute "static-config-schema" ))


(cl-defun komorebi-api-stop (&key whkd ahk bar)
  "Stop the komorebi.exe process and restore all hidden windows.
Usage:
komorebic.exe stop [OPTIONS]

Options:
whkd: Stop whkd if it is running as a background process
ahk: Stop ahk if it is running as a background process
bar: Stop komorebi-bar if it is running as a background process"
  (komorebi-api--execute "stop" whkd ahk bar))


(cl-defun komorebi-api-subscribe-pipe (&key named-pipe)
  "Subscribe to komorebi events using a Named Pipe.
Usage:
komorebic.exe subscribe-pipe <NAMED-PIPE>

Arguments:
NAMED-PIPE: Name of the pipe to send event notifications to (without \\.\pipe\
prepended)"
  (komorebi-api--execute "subscribe-pipe" named-pipe))


(cl-defun komorebi-api-subscribe-socket (&key socket)
  "Subscribe to komorebi events using a Unix Domain Socket.
Usage:
komorebic.exe subscribe-socket <SOCKET>

Arguments:
SOCKET: Name of the socket to send event notifications to"
  (komorebi-api--execute "subscribe-socket" socket))


(cl-defun komorebi-api-swap-workspaces-with-monitor (&key target)
  "Swap focused monitor workspaces with specified monitor.
Usage:
komorebic.exe swap-workspaces-with-monitor <TARGET>

Arguments:
TARGET: Target index (zero-indexed)"
  (komorebi-api--execute "swap-workspaces-with-monitor" target))


;;;###autoload
(defun komorebi-api-toggle-cross-monitor-move-behaviour ()
  "Toggle the behaviour when moving windows across monitor boundaries.
Usage:
komorebic.exe toggle-cross-monitor-move-behaviour"
  (interactive)
  (komorebi-api--execute "toggle-cross-monitor-move-behaviour" ))


;;;###autoload
(defun komorebi-api-toggle-float-override ()
  "Enable or disable float override, which makes it so every new window opens in
floating mode
Usage:
komorebic.exe toggle-float-override"
  (interactive)
  (komorebi-api--execute "toggle-float-override" ))


;;;###autoload
(defun komorebi-api-toggle-float ()
  "Toggle floating mode for the focused window.
Usage:
komorebic.exe toggle-float"
  (interactive)
  (komorebi-api--execute "toggle-float" ))


;;;###autoload
(defun komorebi-api-toggle-maximize ()
  "Toggle native maximization for the focused window.
Usage:
komorebic.exe toggle-maximize"
  (interactive)
  (komorebi-api--execute "toggle-maximize" ))


;;;###autoload
(defun komorebi-api-toggle-monocle ()
  "Toggle monocle mode for the focused container.
Usage:
komorebic.exe toggle-monocle"
  (interactive)
  (komorebi-api--execute "toggle-monocle" ))


;;;###autoload
(defun komorebi-api-toggle-mouse-follows-focus ()
  "Toggle mouse follows focus on all workspaces.
Usage:
komorebic.exe toggle-mouse-follows-focus"
  (interactive)
  (komorebi-api--execute "toggle-mouse-follows-focus" ))


;;;###autoload
(defun komorebi-api-toggle-pause ()
  "Toggle window tiling on the focused workspace.
Usage:
komorebic.exe toggle-pause"
  (interactive)
  (komorebi-api--execute "toggle-pause" ))


;;;###autoload
(defun komorebi-api-toggle-tiling ()
  "Toggle window tiling on the focused workspace.
Usage:
komorebic.exe toggle-tiling"
  (interactive)
  (komorebi-api--execute "toggle-tiling" ))


;;;###autoload
(defun komorebi-api-toggle-title-bars ()
  "Toggle title bars for whitelisted applications.
Usage:
komorebic.exe toggle-title-bars"
  (interactive)
  (komorebi-api--execute "toggle-title-bars" ))


;;;###autoload
(defun komorebi-api-toggle-transparency ()
  "Toggle transparency for unfocused windows.
Usage:
komorebic.exe toggle-transparency"
  (interactive)
  (komorebi-api--execute "toggle-transparency" ))


;;;###autoload
(defun komorebi-api-toggle-window-container-behaviour ()
  "Toggle the behaviour for new windows (stacking or dynamic tiling).
Usage:
komorebic.exe toggle-window-container-behaviour"
  (interactive)
  (komorebi-api--execute "toggle-window-container-behaviour" ))


;;;###autoload
(defun komorebi-api-toggle-workspace-float-override ()
  "Enable or disable float override, which makes it so every new window opens in
floating mode, for the currently focused workspace. If there was no override
value set for the workspace previously it takes the opposite of the global value
Usage:
komorebic.exe toggle-workspace-float-override"
  (interactive)
  (komorebi-api--execute "toggle-workspace-float-override" ))


;;;###autoload
(defun komorebi-api-toggle-workspace-window-container-behaviour ()
  "Toggle the behaviour for new windows (stacking or dynamic tiling) for currently
focused workspace. If there was no behaviour set for the workspace previously it
takes the opposite of the global value
Usage:
komorebic.exe toggle-workspace-window-container-behaviour"
  (interactive)
  (komorebi-api--execute "toggle-workspace-window-container-behaviour" ))


(cl-defun komorebi-api-transparency-alpha (&key alpha)
  "Set the alpha value for unfocused window transparency.
Usage:
komorebic.exe transparency-alpha <ALPHA>

Arguments:
ALPHA: Alpha"
  (komorebi-api--execute "transparency-alpha" alpha))


(cl-defun komorebi-api-transparency (&key boolean-state)
  "Enable or disable transparency for unfocused windows.
Usage:
komorebic.exe transparency <BOOLEAN-STATE>

Arguments:
BOOLEAN-STATE: Possible values: enable, disable"
  (komorebi-api--execute "transparency" boolean-state))


;;;###autoload
(defun komorebi-api-unmanage ()
  "Unmanage a window that was forcibly managed.
Usage:
komorebic.exe unmanage"
  (interactive)
  (komorebi-api--execute "unmanage" ))


(cl-defun komorebi-api-unmanaged-window-operation-behaviour (&key operation-behaviour)
  "Set the operation behaviour when the focused window is not managed.
Usage:
komorebic.exe unmanaged-window-operation-behaviour <OPERATION-BEHAVIOUR>

Arguments:
OPERATION-BEHAVIOUR: Possible values:
- op: Process komorebic commands on
temporarily unmanaged/floated windows
- no-op: Ignore komorebic commands on
temporarily unmanaged/floated windows"
  (komorebi-api--execute "unmanaged-window-operation-behaviour" operation-behaviour))


;;;###autoload
(defun komorebi-api-unstack-all ()
  "Unstack all windows in the focused container.
Usage:
komorebic.exe unstack-all"
  (interactive)
  (komorebi-api--execute "unstack-all" ))


;;;###autoload
(defun komorebi-api-unstack ()
  "Unstack the focused window.
Usage:
komorebic.exe unstack"
  (interactive)
  (komorebi-api--execute "unstack" ))


(cl-defun komorebi-api-unsubscribe-pipe (&key named-pipe)
  "Unsubscribe from komorebi events.
Usage:
komorebic.exe unsubscribe-pipe <NAMED-PIPE>

Arguments:
NAMED-PIPE: Name of the pipe to stop sending event notifications to (without
\\.\pipe\ prepended)"
  (komorebi-api--execute "unsubscribe-pipe" named-pipe))


(cl-defun komorebi-api-unsubscribe-socket (&key socket)
  "Unsubscribe from komorebi events.
Usage:
komorebic.exe unsubscribe-socket <SOCKET>

Arguments:
SOCKET: Name of the socket to stop sending event notifications to"
  (komorebi-api--execute "unsubscribe-socket" socket))


;;;###autoload
(defun komorebi-api-visible-windows ()
  "Show a JSON representation of visible windows.
Usage:
komorebic.exe visible-windows"
  (interactive)
  (komorebi-api--execute "visible-windows" ))


(cl-defun komorebi-api-watch-configuration (&key boolean-state)
  "Enable or disable watching of legacy komorebi.ahk or komorebi.ps1 configurations
(if they exist)
Usage:
komorebic.exe watch-configuration <BOOLEAN-STATE>

Arguments:
BOOLEAN-STATE: Possible values: enable, disable"
  (komorebi-api--execute "watch-configuration" boolean-state))


;;;###autoload
(defun komorebi-api-whkdrc ()
  "Show the path to whkdrc.
Usage:
komorebic.exe whkdrc"
  (interactive)
  (komorebi-api--execute "whkdrc" ))


(cl-defun komorebi-api-window-hiding-behaviour (&key hiding-behaviour)
  "Set the window behaviour when switching workspaces / cycling stacks.
Usage:
komorebic.exe window-hiding-behaviour <HIDING-BEHAVIOUR>

Arguments:
HIDING-BEHAVIOUR: Possible values:
- hide: Use the SW_HIDE flag to hide windows
when switching workspaces (has issues with Electron apps)
- minimize: Use the
SW_MINIMIZE flag to hide windows when switching workspaces (has issues with
frequent workspace switching)
- cloak: Use the undocumented SetCloak Win32
function to hide windows when switching workspaces"
  (komorebi-api--execute "window-hiding-behaviour" hiding-behaviour))


(cl-defun komorebi-api-workspace-layout-rule (&key monitor workspace at-container-count layout)
  "Add a dynamic layout rule for the specified workspace.
Usage:
komorebic.exe workspace-layout-rule <MONITOR> <WORKSPACE> <AT-CONTAINER-COUNT> <LAYOUT>

Arguments:
MONITOR: Monitor index (zero-indexed)
WORKSPACE: Workspace index on the specified monitor (zero-indexed)
AT-CONTAINER-COUNT: The number of window containers on-screen required to
trigger this layout rule
LAYOUT: Possible values: bsp, columns, rows, vertical-stack, horizontal-stack
  ultrawide-vertical-stack, grid, right-main-vertical-stack"
  (komorebi-api--execute "workspace-layout-rule" monitor workspace at-container-count layout))


(cl-defun komorebi-api-workspace-layout (&key monitor workspace value)
  "Set the layout for the specified workspace.
Usage:
komorebic.exe workspace-layout <MONITOR> <WORKSPACE> <VALUE>

Arguments:
MONITOR: Monitor index (zero-indexed)
WORKSPACE: Workspace index on the specified monitor (zero-indexed)
VALUE: Possible values: bsp, columns, rows, vertical-stack, horizontal-stack
  ultrawide-vertical-stack, grid, right-main-vertical-stack"
  (komorebi-api--execute "workspace-layout" monitor workspace value))


(cl-defun komorebi-api-workspace-name (&key monitor workspace value)
  "Set the workspace name for the specified workspace.
Usage:
komorebic.exe workspace-name <MONITOR> <WORKSPACE> <VALUE>

Arguments:
MONITOR: Monitor index (zero-indexed)
WORKSPACE: Workspace index on the specified monitor (zero-indexed)
VALUE: Name of the workspace as a String"
  (komorebi-api--execute "workspace-name" monitor workspace value))


(cl-defun komorebi-api-workspace-padding (&key monitor workspace size)
  "Set the workspace padding for the specified workspace.
Usage:
komorebic.exe workspace-padding <MONITOR> <WORKSPACE> <SIZE>

Arguments:
MONITOR: Monitor index (zero-indexed)
WORKSPACE: Workspace index on the specified monitor (zero-indexed)
SIZE: Pixels to pad with as an integer"
  (komorebi-api--execute "workspace-padding" monitor workspace size))


(cl-defun komorebi-api-workspace-rule (&key identifier id monitor workspace)
  "Add a rule to associate an application with a workspace.
Usage:
komorebic.exe workspace-rule <IDENTIFIER> <ID> <MONITOR> <WORKSPACE>

Arguments:
IDENTIFIER: Possible values: exe, class, title, path
ID: Identifier as a string
MONITOR: Monitor index (zero-indexed)
WORKSPACE: Workspace index on the specified monitor (zero-indexed)"
  (komorebi-api--execute "workspace-rule" identifier id monitor workspace))


(cl-defun komorebi-api-workspace-tiling (&key monitor workspace value)
  "Enable or disable window tiling for the specified workspace.
Usage:
komorebic.exe workspace-tiling <MONITOR> <WORKSPACE> <VALUE>

Arguments:
MONITOR: Monitor index (zero-indexed)
WORKSPACE: Workspace index on the specified monitor (zero-indexed)
VALUE: Possible values: enable, disable"
  (komorebi-api--execute "workspace-tiling" monitor workspace value))


(provide 'komorebi-api)
;;; komorebi-api.el ends here
